sequenceDiagram
    autonumber
    title Dream Recorder - Detailed Architecture and Data Flow

    %% Participants
    participant U as User 🧔
    participant TS as Touch Sensor 🔘<br>(TTP223B)
    participant MIC as Microphone 🎙️<br>(USB Dongle)
    participant GPIO as GPIO Pins<br>(Raspberry Pi)
    participant DISP as Display 📺<br>(Raspberry Pi)
    participant RPI as Raspberry Pi 5 🥧<br>(Hardware)
    participant SYSTEMD as Systemd<br>Services 🔄
    participant GPIOSVC as GPIO Service 🔌<br>(Python)
    participant KIOSK as Chrome Kiosk<br>Browser 🖥️
    participant FLASK as Flask Server 🌶️<br>(Backend)
    participant WS as WebSockets<br>Server 🔌
    participant FE as Frontend<br>Web App 🖥️
    participant OpenAI as OpenAI API 🤖<br>(STT + LLM)
    participant LL as LumaLabs API 🤖<br>(Video Gen)
    
    %% Setup and Initialization
    Note over RPI,FLASK: System Boot & Initialization
    SYSTEMD ->> FLASK: Start Dream Recorder service
    FLASK ->> GPIOSVC: Start GPIO service
    SYSTEMD ->> KIOSK: Start Chrome kiosk mode
    FLASK ->> WS: Initialize WebSockets server
    KIOSK ->> FE: Load frontend application
    FE ->> DISP: Display UI on screen
    
    %% Touch Interaction 1 - Wake Device
    U ->> TS: Single tap 👆
    TS ->> GPIO: Send touch signal
    GPIO ->> GPIOSVC: Process GPIO interrupt
    GPIOSVC ->> FLASK: Send single tap event
    FLASK ->> FE: Notify wake device
    FE ->> DISP: Display "Ready" UI
    
    %% Touch Interaction 2 - Start Recording
    U ->> TS: Long press 👇
    TS ->> GPIO: Send touch signal
    GPIO ->> GPIOSVC: Process GPIO interrupt
    GPIOSVC ->> FLASK: Send long press event
    FLASK ->> FE: Notify recording start
    FE ->> DISP: Display "Recording..." UI
    
    %% Voice Recording
    U ->> MIC: Speak dream description 🗣️
    MIC ->> RPI: Capture audio stream
    RPI ->> FE: Stream raw audio
    FE ->> WS: Stream binary audio data
    
    %% Touch Interaction 3 - Stop Recording
    U ->> TS: Release long press 👆
    TS ->> GPIO: Send touch signal
    GPIO ->> GPIOSVC: Process GPIO interrupt
    GPIOSVC ->> FLASK: Send long press release event
    FLASK ->> FE: Notify recording stop
    FE ->> DISP: Display "Processing..." UI
    
    %% Audio Processing
    WS ->> FLASK: Forward complete audio data
    FLASK ->> OpenAI: Send audio for Speech-to-Text
    OpenAI -->> FLASK: Return transcript text
    
    %% Prompt Creation
    FLASK ->> OpenAI: Send transcript for prompt enhancement
    Note right of OpenAI: LLM processes transcript<br>to create optimal video<br>generation prompt
    OpenAI -->> FLASK: Return enhanced video prompt
    
    %% Video Generation
    FLASK ->> LL: Send video prompt to Luma Labs
    Note right of LL: Generate video based<br>on enhanced prompt
    FLASK ->> FE: Update status "Generating video..."
    FE ->> DISP: Display "Creating your dream..." UI
    
    %% Waiting for video
    FLASK -->> FLASK: Poll for video completion
    LL -->> FLASK: Return video URL when ready
    
    %% Video Playback
    FLASK ->> FE: Send video URL
    FE ->> DISP: Display video player UI
    FE ->> DISP: Stream and play video 📺️
    
    %% Touch Interaction 4 - View Previous Dream
    U ->> TS: Double tap 👆👆
    TS ->> GPIO: Send touch signal
    GPIO ->> GPIOSVC: Process GPIO interrupt
    GPIOSVC ->> FLASK: Send double tap event
    FLASK ->> FE: Notify show previous dream
    FE ->> DISP: Display previous dream video
    
    %% Reset for next interaction
    Note over DISP: After video completes
    FE ->> DISP: Return to idle screen
    Note over U,DISP: System ready for next dream recording 