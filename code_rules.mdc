---
description:
globs:
alwaysApply: false
---
# Cursor Rules for Dream Recorder Project

## 1. Docker-Only Execution
- All commands related to running, building, or testing the project **must** be executed inside the Docker container.
- **Never** suggest or attempt to run `pip install`, Python scripts, or any project code directly on the local machine. Always use the appropriate `docker compose` commands.

## 2. Development Workflow
- To build the development environment, use:
  ```bash
  docker compose -f docker-compose.dev.yml build
  ```
- To start the development environment, use:
  ```bash
  docker compose -f docker-compose.dev.yml up -d
  ```

## 3. Testing
- To run unit tests, use:
  ```bash
  docker compose exec app pytest
  ```
- To run unit tests with a coverage report, use:
  ```bash
  docker compose exec app pytest --cov=. --cov-report=term-missing
  ```
- Always ensure that any new code is covered by unit tests. If new functionality is added, corresponding tests **must** be created or suggested.

## 4. Code Suggestions and Maintenance
- When suggesting code changes, always consider the impact on existing tests and the need for new tests.
- If a code change is made, check for the presence of relevant tests. If missing, create or recommend new tests to maintain or improve test coverage.
- **Never** suggest running or installing dependencies outside of Docker.

## 5. General Best Practices
- Always refer to the Docker Compose configuration for service names and commands.
- When troubleshooting or managing services, use the documented Docker Compose and service management commands from the README.
- Keep documentation and configuration files up to date with any changes to the development or deployment process.
