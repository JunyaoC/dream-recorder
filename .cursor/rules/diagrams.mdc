---
description: 
globs: 
alwaysApply: false
---
# Cursor Rule: Use Mermaid Diagrams for Application Understanding

## Rule Summary
Whenever understanding of the application's architecture, flow, or high-level design is required, always reference the Mermaid diagrams in the `docs/diagrams` directory as a primary source.

## Rules

1. **Diagram Reference Priority**  
   Always check for relevant Mermaid diagrams in `docs/diagrams` before making assumptions or inferences about the application's structure or flow.

2. **Diagram-Driven Reasoning**  
   Use the information from these diagrams (e.g., `application_architecture.mmd`, `conversation_flow.mmd`) as the main source for understanding system structure, component interactions, and workflows.

3. **Diagram Summarization**  
   When referencing a diagram, summarize its key points or flow in natural language before proceeding with further analysis or code changes.

4. **Diagram Consistency Check**  
   If there is a discrepancy between code and diagrams, flag it and clarify which should be considered the source of truth, or ask the user for guidance.

5. **Diagram Update Suggestion**  
   If a code change alters the application's architecture or flow, suggest updating the relevant Mermaid diagram(s) to keep documentation in sync.

6. **Explicit Diagram Mention**  
   When answering questions about the application's design, explicitly mention which diagram(s) were referenced and which parts informed the answer.
